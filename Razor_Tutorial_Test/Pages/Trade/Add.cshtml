@page
@model Razor_Tutorial_Test.Pages.Trade.AddModel
@{
    ViewData["Title"] = "New Trade Request";
}
<div class="page-section bg-dark text-primary">
    <!-- Main Trade Form Container -->
    <div class="container-fluid container-md mt-3 mb-3 bg-secondary border border-primary rounded-5">
        <div class="p-2 p-md-3 mt-2 mb-2">
            <h2 class="text-primary text-center text-md-start">Trade Item</h2>
            <hr />

            <form method="post">
                <div class="row">
                    <!-- Buyer Area -->
                    <div class="col-12 col-md-6 mb-4 mb-md-0">
                        <h4 class="text-center text-md-start">Buyer - Your Offer</h4>

                        <div class="border border-primary p-2 p-md-3 mt-3 rounded-5" style="min-height:auto; position: relative;">
                            @if (Model.SelectedBuyerItem != null)
                            {
                                <div class="position-absolute top-0 end-0 m-2">
                                    <a asp-page="/Trade/Add" asp-route-itemId="@Model.SellerItem?.Id" class="btn btn-sm btn-outline-danger rounded-circle"
                                       title="Cancel Selection">
                                        ❌
                                    </a>
                                </div>
                            }

                            <div class="d-flex align-items-center mt-2">
                                <img src="@(string.IsNullOrEmpty(Model.BuyerUser?.ProfilePicture) ? "/images/default-profile.png" : Model.BuyerUser.ProfilePicture)" class="rounded-circle border border-primary me-2" style="width: 30px; height: 30px;" />
                                <span>@Model.BuyerUser?.Username</span>
                            </div>
                            @if (Model.SelectedBuyerItem != null)
                            {
                                <!-- Buyer Item Carousel -->
                                @if (Model.SelectedBuyerItemImages != null && Model.SelectedBuyerItemImages.Count > 0)
                                {
                                    <div id="buyerCarousel" class="carousel slide mt-3 mb-3" data-bs-ride="carousel">
                                        <div class="carousel-inner">
                                            @for (int i = 0; i < Model.SelectedBuyerItemImages.Count; i++)
                                            {
                                                <div class="carousel-item @(i == 0 ? "active" : "")">
                                                    <img src="@Model.SelectedBuyerItemImages[i].ImageUrl" class="d-block w-100 border border-primary rounded-5" style="max-height: 250px; object-fit: contain;" />
                                                </div>
                                            }
                                        </div>
                                        <button class="carousel-control-prev" type="button" data-bs-target="#buyerCarousel" data-bs-slide="prev">
                                            <span class="carousel-control-prev-icon"></span>
                                        </button>
                                        <button class="carousel-control-next" type="button" data-bs-target="#buyerCarousel" data-bs-slide="next">
                                            <span class="carousel-control-next-icon"></span>
                                        </button>
                                    </div>
                                }
                                else
                                {
                                    <p class="text-muted">This item has no images.</p>
                                }

                                <!-- Buyer Item Details -->
                                <div class="mt-2 text-center">
                                    <h5 class="text-white">@Model.SelectedBuyerItem.Name</h5>
                                    <div class="mb-2">
                                        <strong>Description</strong>
                                        <textarea class="form-control form-control-sm bg-dark border border-primary text-white text-center" readonly style="max-height: 80px; overflow-y: auto;">@Model.SelectedBuyerItem.Description</textarea>
                                    </div>
                                    <div class="row g-2">
                                        <div class="col-6">
                                            <strong>Category</strong>
                                            <input class="form-control form-control-sm bg-dark border border-primary text-white text-center" readonly value="@Model.SelectedBuyerItemCategoryName" />
                                        </div>
                                        <div class="col-6">
                                            <strong>Ideal Price</strong>
                                            <input class="form-control form-control-sm bg-dark border border-primary text-white text-center" readonly value="RM @Model.SelectedBuyerItem.Price" />
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="mt-4 mb-4 text-center">
                                    <span class="text-muted">No item selected yet.</span>
                                </div>
                            }
                            <!-- Choose Item Button - Hidden when an item is selected -->
                            @if (Model.SelectedBuyerItem == null)
                            {
                                <div class="mt-3 text-center">
                                    <button type="button" class="btn btn-outline-primary w-100" data-bs-toggle="modal" data-bs-target="#chooseItemModal">
                                        Choose Item
                                    </button>
                                </div>
                            }
                        </div>

                        <input type="hidden" asp-for="SelectedBuyerItemId" />
                        <input type="hidden" name="RequestedItemID" value="@Model.SellerItem?.Id" />
                    </div>

                    <!-- Seller Area -->
                    <div class="col-12 col-md-6">
                        <h4 class="text-center text-md-start">Seller - Requested Item</h4>
                        <div class="border border-primary p-2 p-md-3 mt-3 rounded-5" style="min-height:auto;">
                            <div class="d-flex align-items-center mt-2">
                                <img src="@(string.IsNullOrEmpty(Model.SellerUser?.ProfilePicture) ? "/images/default-profile.png" : Model.SellerUser.ProfilePicture)" class="rounded-circle border border-primary me-2" style="width: 30px; height: 30px;" />
                                <span>@Model.SellerUser?.Username</span>
                            </div>
                            <!-- Seller Item Carousel -->
                            @if (Model.SellerItemImages != null && Model.SellerItemImages.Count > 0)
                            {
                                <div id="sellerCarousel" class="carousel slide mt-3 mb-3" data-bs-ride="carousel">
                                    <div class="carousel-inner">
                                        @for (int i = 0; i < Model.SellerItemImages.Count; i++)
                                        {
                                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                                <img src="@Model.SellerItemImages[i].ImageUrl" class="d-block w-100 border border-primary rounded-5" style="max-height: 250px; object-fit: contain;" />
                                            </div>
                                        }
                                    </div>
                                    <button class="carousel-control-prev" type="button" data-bs-target="#sellerCarousel" data-bs-slide="prev">
                                        <span class="carousel-control-prev-icon"></span>
                                    </button>
                                    <button class="carousel-control-next" type="button" data-bs-target="#sellerCarousel" data-bs-slide="next">
                                        <span class="carousel-control-next-icon"></span>
                                    </button>
                                </div>
                            }
                            else
                            {
                                <p class="text-muted">This item has no images.</p>
                            }

                            <!-- Seller Item Details -->
                            <div class="mt-2 text-center">
                                <h5 class="text-white">@Model.SellerItem?.Name</h5>
                                <div class="mb-2">
                                    <strong>Description</strong>
                                    <textarea class="form-control form-control-sm bg-dark border border-primary text-white text-center" readonly style="max-height: 80px; overflow-y: auto;">@Model.SellerItem?.Description</textarea>
                                </div>
                                <div class="row g-2">
                                    <div class="col-6">
                                        <strong>Category</strong>
                                        <input class="form-control form-control-sm bg-dark border border-primary text-white text-center" readonly value="@Model.SellerItemCategoryName" />
                                    </div>
                                    <div class="col-6">
                                        <strong>Ideal Price</strong>
                                        <input class="form-control form-control-sm bg-dark border border-primary text-white text-center" readonly value="RM @Model.SellerItem?.Price" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <input type="hidden" asp-for="SellerItemId" />

                <hr />
                <div class="mb-3">
                    <label>Money Offered (Optional)</label>
                    <input asp-for="MoneyOfferedInput" class="form-control bg-dark text-white border-primary" placeholder="Insert Your Offer Price Here..." />
                    <span asp-validation-for="MoneyOfferedInput" class="text-danger"></span>
                </div>

                <div class="d-grid gap-2 d-md-flex mb-3">
                    <button type="submit" class="btn btn-primary fw-bold w-100 w-md-auto">Submit Trade</button>
                    <a asp-page="/Item/Index" class="btn btn-dark fw-bold w-100 w-md-auto">Cancel</a>
                </div>
            </form>
        </div>
    </div>

    <!-- Separate Trade History Container -->
    <div class="container-fluid container-md mt-3 mt-md-4 mb-3 mb-md-5 bg-secondary border border-primary rounded-5">
        <div class="p-2 p-md-3 mt-2 mt-md-3 mb-2 mb-md-3">
            <div class="d-flex justify-content-between align-items-center">
                <h3 class="text-primary mb-0">Item Trade History</h3>
                <button class="btn btn-sm btn-outline-primary" type="button" data-bs-toggle="collapse" data-bs-target="#tradeHistoryCollapse" aria-expanded="false" aria-controls="tradeHistoryCollapse">
                    <i class="bi bi-chevron-down toggle-icon"></i>
                </button>
            </div>
            <hr />

            <div class="collapse" id="tradeHistoryCollapse">
                @if (Model.ItemTradeHistory.Any())
                {
                    <!-- Desktop Table View - Hidden on mobile -->
                    <div class="d-none d-md-block">
                        <div class="table-responsive">
                            <table class="table table-dark table-hover border-primary">
                                <thead>
                                    <tr class="text-primary">
                                        <th>Offered Item</th>
                                        <th>Name</th>
                                        <th>Money Offered</th>
                                        <th>Status</th>
                                        <th>Date</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var history in Model.ItemTradeHistory)
                                    {
                                        <tr>
                                            <td style="width: 80px;">
                                                @if (!string.IsNullOrEmpty(history.OfferedItemImageUrl))
                                                {
                                                    <img src="@history.OfferedItemImageUrl" class="img-fluid border border-primary rounded" style="height: 50px; width: 50px; object-fit: cover;" />
                                                }
                                                else
                                                {
                                                    <div class="bg-secondary border border-primary rounded d-flex align-items-center justify-content-center" style="height: 50px; width: 50px;">
                                                        <span class="text-muted small">No Image</span>
                                                    </div>
                                                }
                                            </td>
                                            <td>@(string.IsNullOrEmpty(history.OfferedItemName) ? "Cash Offer" : history.OfferedItemName)</td>
                                            <td>@(history.MoneyOffered.HasValue ? $"RM {history.MoneyOffered}" : "None")</td>
                                            <td>
                                                <span class="badge @GetStatusBadgeClass(history.OrderStatus)">
                                                    @history.OrderStatus
                                                </span>
                                            </td>
                                            <td>@history.CreatedAt.ToString("MMM dd, yyyy")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <!-- Mobile-Friendly History Cards (Visible only on small screens) -->
                    <div class="d-md-none mt-3">
                        @foreach (var history in Model.ItemTradeHistory)
                        {
                            <div class="card bg-dark border border-primary mb-3">
                                <div class="card-header d-flex justify-content-between align-items-center">
                                    <div class="d-flex align-items-center">
                                        <img src="@(string.IsNullOrWhiteSpace(history.OfferedItemImageUrl) ? "/itemimages/no-image.png" : history.OfferedItemImageUrl)" class="border border-primary rounded me-2" style="height: 40px; width: 40px; object-fit: cover;" />
                                        <span class="fw-bold">@(string.IsNullOrEmpty(history.OfferedItemName) ? "Cash Offer" : history.OfferedItemName)</span>
                                    </div>
                                    <span class="badge @GetStatusBadgeClass(history.OrderStatus)">
                                        @history.OrderStatus
                                    </span>
                                </div>
                                <div class="card-body py-2">
                                    <div class="row">
                                        <div class="col-6">
                                            <small class="text-muted">Money Offered:</small>
                                            <p class="mb-0">@(history.MoneyOffered.HasValue ? $"RM {history.MoneyOffered}" : "None")</p>
                                        </div>
                                        <div class="col-6 text-end">
                                            <small class="text-muted">Date:</small>
                                            <p class="mb-0">@history.CreatedAt.ToString("MMM dd, yyyy")</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="text-center py-4">
                        <i class="bi bi-clock-history fs-1 text-muted mb-2"></i>
                        <p class="text-muted">No trade history available for this item.</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Choose Item Modal -->
<div class="modal fade" id="chooseItemModal" tabindex="-1" aria-labelledby="chooseItemModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg">
        <div class="modal-content bg-dark border border-primary text-white rounded-5 shadow-lg">
            <div class="modal-header border-bottom border-primary">
                <h5 class="modal-title fw-bold" id="chooseItemModalLabel">Choose an Item to Offer</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row g-3">
                    @{
                        int count = 1;
                        bool hasAvailableItems = false;
                    }
                    @foreach (var item in Model.BuyerItems)
                    {
                        if (item.Status == "Available")
                        {
                            hasAvailableItems = true;
                            <div class="col-6 col-sm-6 col-md-4">
                                <form method="get">
                                    <input type="hidden" name="itemId" value="@Model.SellerItem?.Id" />
                                    <input type="hidden" name="buyerItemId" value="@item.Id" />
                                    <button type="submit" class="card bg-dark text-white border border-primary h-100 shadow-sm position-relative" style="transition: transform 0.3s ease; width: 100%;">
                                        <!-- Item Number Badge -->
                                        <div class="position-absolute top-0 start-0 m-1 px-2 py-1 bg-primary text-white rounded-3 small fw-bold z-3">
                                            @count
                                        </div>

                                        <!-- Item Image -->
                                        @if (Model.BuyerItemImages.ContainsKey(item.Id) && Model.BuyerItemImages[item.Id].Count > 0)
                                        {
                                            <img src="@Model.BuyerItemImages[item.Id][0].ImageUrl"
                                                 class="card-img-top rounded-top-5 border-bottom border-primary"
                                                 style="height: 120px; object-fit: contain; width: 100%;" />
                                        }
                                        else
                                        {
                                            <div class="card-img-top d-flex align-items-center justify-content-center text-muted bg-secondary rounded-top-5 border-bottom border-primary"
                                                 style="height: 120px;">
                                                No Image
                                            </div>
                                        }

                                        <!-- Card Body -->
                                        <div class="card-body px-2 py-1">
                                            <h6 class="card-title text-truncate mb-1 small">📦 @item.Name</h6>
                                            <p class="card-text text-muted text-truncate" style="font-size: 0.7rem;">📝 @item.Description</p>
                                        </div>
                                    </button>
                                </form>
                            </div>
                            count++;
                        }
                    }

                    @if (!hasAvailableItems)
                    {
                        <div class="col-12 text-center py-5">
                            <div class="d-flex flex-column align-items-center">
                                <i class="bi bi-box fs-1 text-muted mb-3"></i>
                                <h5 class="text-muted">No Available Items</h5>
                                <p class="text-muted small">You don't have any available items to trade.</p>
                                <a href="/UserProfile/Add" class="btn btn-outline-primary btn-sm mt-2">Add New Item</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Completed" => "bg-success",
            "Pending" => "bg-warning text-dark",
            "Rejected" => "bg-danger",
            "Cancelled" => "bg-secondary",
            _ => "bg-info"
        };
    }
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Get elements
            const tradeHistoryCollapse = document.getElementById('tradeHistoryCollapse');
            const toggleButton = document.querySelector('[data-bs-toggle="collapse"][data-bs-target="#tradeHistoryCollapse"]');
            const toggleIcon = document.querySelector('.toggle-icon');

            // Function to update the icon based on collapse state
            function updateToggleIcon(isExpanded) {
                if (toggleIcon) {
                    toggleIcon.classList.remove('bi-chevron-down', 'bi-chevron-up');
                    toggleIcon.classList.add(isExpanded ? 'bi-chevron-up' : 'bi-chevron-down');
                }
            }

            // Initialize based on device size
            function initializeCollapseState() {
                // On mobile, collapse by default
                const isMobile = window.innerWidth < 768; // Bootstrap's md breakpoint

                if (tradeHistoryCollapse) {
                    // Check if Bootstrap has already initialized this element
                    if (isMobile && !tradeHistoryCollapse.classList.contains('collapsing')) {
                        tradeHistoryCollapse.classList.remove('show');
                        updateToggleIcon(false);
                    }
                }
            }

            // Handle Bootstrap collapse events for icon updates
            if (tradeHistoryCollapse) {
                tradeHistoryCollapse.addEventListener('show.bs.collapse', function() {
                    updateToggleIcon(true);
                });

                tradeHistoryCollapse.addEventListener('hide.bs.collapse', function() {
                    updateToggleIcon(false);
                });
            }

            // Initialize collapse state
            initializeCollapseState();

            // Recheck if window is resized
            window.addEventListener('resize', initializeCollapseState);
        });
    </script>
}